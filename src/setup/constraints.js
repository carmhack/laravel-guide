const CATEGORIES = Object.freeze({
  SETUP: "SETUP",
  MIGRATION: "MIGRATION",
  SEEDER: "SEEDER",
  MODEL: "MODEL",
  CONTROLLER: "CONTROLLER",
  ROUTES: "ROUTES",
  GIT: "GIT",
})

export const CATEGORIES_LABELS = Object.freeze({
  SETUP: "Setup di progetto",
  MIGRATION: "Migration",
  SEEDER: "Seeder",
  MODEL: "Modelli",
  CONTROLLER: "Controller",
  ROUTES: "Rotte",
  GIT: "GIT",
});

export const USER_SELECTIONS = Object.freeze({
  CREATION: "CREATION",
  CLONE: "CLONE",
});

export const USER_SELECTION_LABELS = Object.freeze({
  CREATION: "Creazione progetto",
  CLONE: "Clone progetto",
});

export const CREATION_STEPS = [
  {
    id: 1,
    category: CATEGORIES.SETUP,
    title: "Inizializza il progetto",
    description: "",
    code: "composer create-project --prefer-dist laravel/laravel:^7.0 nome-progetto",
    checked: false,
  },
  {
    id: 2,
    category: CATEGORIES.SETUP,
    title: "Crea il database tramite phpMyAdmin",
    description: "",
    code: "",
    checked: false,
  },
  {
    id: 3,
    category: CATEGORIES.SETUP,
    title: "Crea il file .env",
    description: "Copia il file env.example e rinomina solo il file copiato. In questo modo il file env.example continuerà ad essere presente nella repo, mentre il file .env non sarà pushato. Se non è presente, aggiungi .env al file .gitignore",
    code: "",
    checked: false,
  },
  {
    id: 4,
    category: CATEGORIES.SETUP,
    title: "Avvia il progetto",
    description: "",
    code: "php artisan serve",
    checked: false,
  },
  {
    id: 5,
    category: CATEGORIES.MIGRATION,
    title: "Crea le migration",
    description: "Nella funzione up delle migrations aggiungi i campi della tabella",
    code: "php artisan make:migration create_nometabella_table",
    checked: false,
  },
  {
    id: 6,
    category: CATEGORIES.MIGRATION,
    title: "Esegui le migration",
    description: "Ricordati che le migration vengono eseguite in blocchi. Per annullare l'ultimo blocco, puoi eseguire il comando php artisan migrate:rollback",
    code: "php artisan migrate",
    checked: false,
  },
  {
    id: 7,
    category: CATEGORIES.MODEL,
    title: "Crea i model",
    description: "Ricordati che è preferibile usare il nome della tabella al singolare. Per tutti gli altri casi, puoi sfruttare la variabile protected $table dentro il modello per specificare il nome della tabella (ad es. modello Pizza, tabella Pizze e non Pizzas)",
    code: "php artisan make:model NomeModello",
    checked: false,
  },
  {
    id: 8,
    category: CATEGORIES.SEEDER,
    title: "Importa il faker",
    description: "Aggiungiamo il faker (se ci serve) e importiamolo nel seeder tramite use Faker\Generator as Faker. Va aggiunto anche come parametro della funzione run",
    code: "composer remove fzaninotto/faker\ncomposer require fakerphp/faker",
    checked: false,
  },
  {
    id: 9,
    category: CATEGORIES.SEEDER,
    title: "Crea i seeder",
    description: "",
    code: "php artisan make:seeder NometabellaTableSeeder",
    checked: false,
  },
  {
    id: 10,
    category: CATEGORIES.SEEDER,
    title: "Esegui i seeder",
    description: "Se vuoi eseguire un solo seeder, aggiungi --class=NomeSeeder",
    code: "php artisan db:seed",
    checked: false,
  },
  {
    id: 11,
    category: CATEGORIES.CONTROLLER,
    title: "Crea il controller",
    description: "Ricordati che il comando --resource genera, oltre al controller, il modello e la cartella delle view (CRUD)",
    code: "php artisan make:controller --resource NomeController",
    checked: false,
  },
  {
    id: 12,
    category: CATEGORIES.ROUTES,
    title: "Crea le rotte",
    description: "Ricordati di controllare sempre le rotte generate con il comando php artisan route:list",
    code: "Route::resource('nomeTabella', 'NomeController')",
    checked: false,
  },
];

export const CLONE_STEPS = [
  {
    id: 1,
    category: CATEGORIES.GIT,
    title: "Accesso a GitHub",
    description: "Vai alla pagina GitHub della repository, clicca sul pulsante verde Code e copia l'indirizzo HTTPS",
    code: "",
    checked: false,
  },
  {
    id: 2,
    category: CATEGORIES.GIT,
    title: "Clona il progetto",
    description: "Dal terminale spostati nella cartella in cui vuoi creare il progetto e lancia il comando di clone. In alternativa, puoi usare VS Code cliccando su 'Clona repository' e inserendo l'indirizzo HTTPS",
    code: "git clone indirizzoHTTPS",
    checked: false,
  },
  {
    id: 3,
    category: CATEGORIES.SETUP,
    title: "Installa le dipendenze",
    description: "Installiamo le dipendenze backend con composer e, se necessario, le dipendenze frontend con npm",
    code: "composer install\nnpm install (se necessario)",
    checked: false,
  },
  {
    id: 4,
    category: CATEGORIES.SETUP,
    title: "Crea il database",
    description: "Tramite phpMyAdmin crea il database",
    code: "",
    checked: false,
  },
  {
    id: 5,
    category: CATEGORIES.SETUP,
    title: "Crea il file .env",
    description: "Copia il file env.example e rinomina solo il file copiato. In questo modo il file env.example continuerà ad essere presente nella repo, mentre il file .env non sarà pushato. Se non è presente, aggiungi .env al file .gitignore",
    code: "",
    checked: false,
  },
  {
    id: 6,
    category: CATEGORIES.SETUP,
    title: "Genera la chiave privata",
    description: "Genera la tua chiave privata sul file .env",
    code: "php artisan key:generate",
    checked: false,
  },
  {
    id: 7,
    category: CATEGORIES.MIGRATION,
    title: "Esegui le migration",
    description: "Se sono già presenti le migration, eseguile",
    code: "php artisan migrate",
    checked: false,
  },
  {
    id: 8,
    category: CATEGORIES.SEEDER,
    title: "Esegui i seeder",
    description: "Se sono presenti i seeder, eseguili",
    code: "php artisan db:seed",
    checked: false,
  },
];